AWSTemplateFormatVersion: '2010-09-09'

Description: deploy an ansible playground

Parameters:
  keyName:
    Description: Key pair to use for instances
    Type: String

  vpcStackName:
    Description: Name of the vpc stack in which to deploy the instances
    Type: String

  stackName:
    Description: Name of the stack to distinguish it from other stacks
    Type: String

  instanceType:
    Description: ec2 instance type
    Type: String

  ec2Image:
    Description: AMI for the ec2 instance
    Type: String

  adminPassword:
    Description: Admin password
    Type: String

Resources:
  ansibleServer:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.autoScalingGroup.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --resource autoScalingGroup --region ${AWS::Region}
                runas=root
              mode: "000400"
              owner: "root"
              group: "root"
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackName}
                region=${AWS::Region}
                interval=1
              mode: "000400"
              owner: "root"
              group: "root"
          commands:
            010-script-start:
              command: "echo \"$(date) - this is a test from cfn\" | sudo tee --append /home/ec2-user/eddyCFN.log"
              waitAfterCompletion: '0'
            999-signal-complete:
              command: !Join
                - ''
                - - '/opt/aws/bin/cfn-signal -e $? -r "call to 999-signal-complete" '
                  - !Base64
                    Ref: ec2VMUpdateWaitHandle
              ignoreErrors: true
              waitAfterCompletion: 0
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - /etc/cfn/cfn-hup.conf
                  - /etc/cfn/hooks.d/cfn-auto-reloader.conf
    Properties:
      InstanceType: !Ref instanceType
      KeyName: !Ref keyName
      ImageId: !Ref ec2Image
      NetworkInterfaces:
        - DeleteOnTermination: 'true'
          DeviceIndex: 0
          SubnetId:
            Fn::ImportValue: !Join [ "-", [ !Ref vpcStackName, "public-subnet1" ]]
          GroupSet:
            - Fn::ImportValue: !Join [ "-", [ !Ref vpcStackName, "externalrdp-securitygroup" ]]
      UserData: !Base64
        'Fn::Join':
          - ''
          - - "<script>\r\n"
            - 'cfn-init.exe -v -s '
            - !Ref 'AWS::StackId'
            - ' -r ansibleServer'
            - ' --region '
            - !Ref 'AWS::Region'
            - "\r\n"
            - </script>
      Tags:
        - Key: Name
          Value:
            !Join [ "-", [ !Ref stackName, "jumpbox" ]]

Outputs:
  publicDns:
    Description: Public DNS record for the Jumpbox instance
    Value:
      Fn::GetAtt: [ ansibleServer, PublicDnsName ]
    Export:
      Name: !Join [ "-", [ !Ref stackName, "jumpbox", "publicDns" ]]

  publicIp:
    Description: Public IP address for the Jumpbox instance
    Value:
      Fn::GetAtt: [ ansibleServer, PublicIp ]
    Export:
      Name: !Join [ "-", [ !Ref stackName, "jumpbox", "publicIp" ]]

  adminUsername:
    Description: Local Admin username
    Value: ".\\Administrator"
    Export:
      Name: !Join [ "-", [ !Ref stackName, "jumpbox", "adminUsername" ]]

  adminPassword:
    Description: Local Admin password
    Value: !Ref adminPassword
    Export:
      Name: !Join [ "-", [ !Ref stackName, "jumpbox", "adminPassword" ]]


